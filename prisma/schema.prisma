// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String   @id
  shop          String
  state         String
  isOnline      Boolean  @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean  @default(false)
  locale        String?
  collaborator  Boolean? @default(false)
  emailVerified Boolean? @default(false)
}

model MerchantMessagingConfig {
  id              Int                 @id @default(autoincrement())
  shopDomain      String              @unique
  heroHeadline    String
  heroBody        String
  currencyCode    String
  defaultTone     String
  lastPublishedAt DateTime?
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

  thresholds      ThresholdSetting[]
  upsellSettings  UpsellSetting[]
  audits          ConfigAuditLog[]
  bonusAttachments MessagingBonusAttachment[]
}

model ThresholdSetting {
  id          Int                     @id @default(autoincrement())
  configId    Int
  labelKey    String
  amountCents Int
  tone        String
  priority    Int                     @default(0)
  isActive    Boolean                 @default(true)
  messageJson String
  createdAt   DateTime                @default(now())
  updatedAt   DateTime                @updatedAt

  config      MerchantMessagingConfig @relation(fields: [configId], references: [id], onDelete: Cascade)

  @@index([configId])
}

model UpsellSetting {
  id            Int                     @id @default(autoincrement())
  configId      Int
  title         String
  body          String
  titleJson     String
  bodyJson      String
  targetProduct String?
  discountCode  String?
  isEnabled     Boolean                 @default(false)
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt

  config        MerchantMessagingConfig @relation(fields: [configId], references: [id], onDelete: Cascade)

  @@index([configId])
}

model ConfigAuditLog {
  id         Int                     @id @default(autoincrement())
  configId   Int
  actorShop  String
  actorEmail String?
  action     String
  diff       String
  createdAt  DateTime                @default(now())

  config     MerchantMessagingConfig @relation(fields: [configId], references: [id], onDelete: Cascade)

  @@index([configId, createdAt])
}

enum AttachmentRuleKey {
  annual
  quarterly
  hero
  upsell
}

enum AttachmentValueSource {
  price
  custom
}

enum InventoryAdjustmentStatus {
  success
  retrying
  failed
}

model MessagingBonusAttachment {
  id               String                      @id @default(cuid())
  configId         Int
  ruleKey          AttachmentRuleKey
  productId        String
  variantId        String?
  quantity         Int                         @default(1)
  valueSource      AttachmentValueSource       @default(price)
  customValueCents Int?
  locales          Json
  imageUrl         String?
  updatedBy        String
  createdAt        DateTime                    @default(now())
  updatedAt        DateTime                    @updatedAt

  config           MerchantMessagingConfig     @relation(fields: [configId], references: [id], onDelete: Cascade)
  adjustments      BonusInventoryAdjustment[]

  @@index([configId, ruleKey])
  @@index([variantId])
}

model BonusInventoryAdjustment {
  id           String                     @id @default(cuid())
  orderId      String
  attachmentId String
  adjustedAt   DateTime?
  status       InventoryAdjustmentStatus  @default(retrying)
  attemptCount Int                        @default(1)
  lastError    String?
  createdAt    DateTime                   @default(now())
  updatedAt    DateTime                   @updatedAt

  attachment   MessagingBonusAttachment   @relation(fields: [attachmentId], references: [id], onDelete: Cascade)

  @@unique([orderId, attachmentId])
  @@index([status])
}
